// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RebelsTasks.DataAccess;

namespace RebelsTasks.DataAccess.Migrations
{
    [DbContext(typeof(RebelTaskContext))]
    [Migration("20220317081314_DepartmentMigration")]
    partial class DepartmentMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RebelsTasks.DataAccess.Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentDescription")
                        .IsRequired()
                        .HasColumnType("varchar(4000)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentDescription = "Yazılım Ve Kod Geliştirme Depertmanı",
                            DepartmentName = "Yazılım"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentDescription = "Proje Analizi ,İş Analizi ve Genel Tasarım",
                            DepartmentName = "Proje Analiz"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentDescription = "Arayüz Ve Görsel Depertmanı",
                            DepartmentName = "Grafik Ve Arayüzü"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentDescription = "Yöneticiler Deperatmanı",
                            DepartmentName = "Yönetim"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
